<!DOCTYPE html>
<html lang="uk">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ö—Ä–∏–ø—Ç–æ-–í–∞–ª—é—Ç–∏</title>
  <style>
    body {
      background-color: #111;
      color: #ffc800;
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
    }

    header, nav ul {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background-color: #000;
      padding: 10px 20px;
      border: 2px solid #ffc800;
    }

    nav ul {
      list-style: none;
      gap: 10px;
    }

    nav li {
      padding: 8px 16px;
      background: #222;
      border: 2px solid #ffc800;
      cursor: pointer;
    }

    nav li:hover {
      background-color: #333;
    }

    section {
      margin-top: 20px;
      padding: 20px;
      border: 2px solid #ffc800;
    }

    select, input {
      padding: 10px;
      margin: 5px;
      background: #222;
      color: #fff;
      border: 1px solid #ffc800;
    }

    button {
      background: #ffc800;
      border: none;
      padding: 10px 15px;
      cursor: pointer;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 15px;
    }

    th, td {
      border: 1px solid #ffc800;
      padding: 10px;
      text-align: center;
    }
  </style>
</head>
<body>
  <header>
    <div class="logo">"–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –°–∞–π—Ç–∞"</div>
    <div class="Name">"–ù–∞–∑–≤–∞ –°–∞–π—Ç—É"</div>
    <nav>
      <ul>
        <li>–ì–æ–ª–æ–≤–Ω–∞</li>
        <li>–ö—É—Ä—Å–∏ –í–∞–ª—é—Ç</li>
        <li>–ö—É—Ä—Å–∏ –ö—Ä–∏–ø—Ç–æ-–í–∞–ª—é—Ç</li>
        <li>–ö–æ–Ω—Ç–∞–∫—Ç–∏</li>
        <li>–ó–º—ñ–Ω–∞ —Ç–µ–º–∏</li>
      </ul>
    </nav>
  </header>

  <main>
    <section>
      <label>–í–∏–±—Ä–∞–Ω–∞ –í–∞–ª—é—Ç–∞:</label>
      <select id="currency-left">
        <option value="BTC">Bitcoin (BTC)</option>
        <option value="ETH">Ethereum (ETH)</option>
        <option value="DOGE">Dogecoin (DOGE)</option>
      </select>
      <input type="number" id="amount-left" placeholder="–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É">
      
      <button id="switch-currency">üîÑ</button>
      
      <select id="currency-right">
        <option value="BTC">Bitcoin (BTC)</option>
        <option value="ETH">Ethereum (ETH)</option>
        <option value="DOGE">Dogecoin (DOGE)</option>
      </select>
      <input type="number" id="amount-right" placeholder="–†–µ–∑—É–ª—å—Ç–∞—Ç" disabled>
    </section>

    <section>
      <h2>–ö—É—Ä—Å–∏ –ö—Ä–∏–ø—Ç–æ-–í–∞–ª—é—Ç</h2>
      <table>
        <thead>
          <tr>
            <th>–ö—Ä–∏–ø—Ç–æ-–í–∞–ª—é—Ç–∏</th>
            <th>–¶—ñ–Ω–∞ (UAH)</th>
          </tr>
        </thead>
        <tbody id="crypto-table-body">
          <tr><td colspan="2">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</td></tr>
        </tbody>
      </table>
    </section>
  </main>

  <script>
    const API_KEY = "0b8a4756-d122-4e0a-bb24-d51cdb479fa5"; // ‚Üê –í–°–¢–ê–í –°–Æ–î–ò –°–í–Ü–ô API KEY
    const cryptoList = ["BTC", "ETH", "DOGE"];
    const currencyMap = {};

    async function fetchCryptoPrices() {
      try {
        const res = await fetch(
          `https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=${cryptoList.join(",")}&convert=UAH`,
          {
            headers: {
              "X-CMC_PRO_API_KEY": API_KEY
            }
          }
        );
        const data = await res.json();
        cryptoList.forEach(symbol => {
          const price = data.data[symbol].quote.UAH.price;
          currencyMap[symbol] = price;
        });
        updateTable();
        convertAmount();
      } catch (err) {
        document.getElementById("crypto-table-body").innerHTML = "<tr><td colspan='2'>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</td></tr>";
        console.error(err);
      }
    }

    function updateTable() {
      const tbody = document.getElementById("crypto-table-body");
      tbody.innerHTML = "";
      cryptoList.forEach(symbol => {
        const price = currencyMap[symbol]?.toFixed(2) || "...";
        tbody.innerHTML += `
          <tr>
            <td>${symbol}</td>
            <td>${price} ‚Ç¥</td>
          </tr>`;
      });
    }

    function convertAmount() {
      const from = document.getElementById("currency-left").value;
      const to = document.getElementById("currency-right").value;
      const amount = parseFloat(document.getElementById("amount-left").value);
      if (!currencyMap[from] || !currencyMap[to] || isNaN(amount)) return;
      const inUAH = amount * currencyMap[from];
      const result = inUAH / currencyMap[to];
      document.getElementById("amount-right").value = result.toFixed(6);
    }

    document.getElementById("currency-left").addEventListener("change", convertAmount);
    document.getElementById("currency-right").addEventListener("change", convertAmount);
    document.getElementById("amount-left").addEventListener("input", convertAmount);

    document.getElementById("switch-currency").addEventListener("click", () => {
      const left = document.getElementById("currency-left");
      const right = document.getElementById("currency-right");
      [left.value, right.value] = [right.value, left.value];
      convertAmount();
    });

    fetchCryptoPrices();
  </script>
</body>
</html>
